<ExportFile>
  <StructuredView Guid="{d9b2b2cc-ea99-4c3b-aa42-1e5c49e65b84}">
<Single xml:space="preserve" Type="{3daac5e4-660e-42e4-9cea-3711b98bfb63}" Method="IArchivable">
  <Null Name="Profile" />
  <List2 Name="EntryList">
    <Single Type="{6198ad31-4b98-445c-927f-3258a0e82fe3}" Method="IArchivable">
      <Single Name="IsRoot" Type="bool">True</Single>
      <Single Name="MetaObject" Type="{81297157-7ec9-45ce-845e-84cab2b88ade}" Method="IArchivable">
        <Single Name="Guid" Type="System.Guid">707a7570-1a86-4ce1-831f-3dd8049110a5</Single>
        <Single Name="ParentGuid" Type="System.Guid">00000000-0000-0000-0000-000000000000</Single>
        <Single Name="Name" Type="string">Testment_Servo_Function_Test</Single>
        <Dictionary Type="{2c41fa04-1834-41c1-816e-303c7aa2c05b}" Name="Properties">
          <Entry>
            <Key>
              <Single Type="System.Guid">829a18f2-c514-4f6e-9634-1df173429203</Single>
            </Key>
            <Value>
              <Single Type="{829a18f2-c514-4f6e-9634-1df173429203}" Method="IArchivable">
                <Dictionary Type="{fa2ee218-a39b-4b6d-b249-49dbddbd168a}" Name="ParentObjects">
                  <Entry>
                    <Key>
                      <Single Type="System.Guid">d9b2b2cc-ea99-4c3b-aa42-1e5c49e65b84</Single>
                    </Key>
                    <Value>
                      <Single Type="System.Guid">fa2632c8-a11c-4d71-8df4-00a64bb35d20</Single>
                    </Value>
                  </Entry>
                </Dictionary>
              </Single>
            </Value>
          </Entry>
        </Dictionary>
        <Single Name="TypeGuid" Type="System.Guid">738bea1e-99bb-4f04-90bb-a7a567e74e3a</Single>
        <Null Name="EmbeddedTypeGuids" />
        <Single Name="Timestamp" Type="long">636555891484377460</Single>
      </Single>
      <Single Name="Object" Type="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" Method="IArchivable">
        <Single Name="StructuredViewGuid" Type="System.Guid">d9b2b2cc-ea99-4c3b-aa42-1e5c49e65b84</Single>
      </Single>
      <Single Name="ParentSVNodeGuid" Type="System.Guid">fa2632c8-a11c-4d71-8df4-00a64bb35d20</Single>
      <Array Name="Path" Type="string">
        <Single Type="string">CODESYS_Control_x86_Arca_Control_SM</Single>
        <Single Type="string">PLC Logic</Single>
        <Single Type="string">Application</Single>
      </Array>
      <Single Name="Index" Type="int">-1</Single>
    </Single>
    <Single Type="{6198ad31-4b98-445c-927f-3258a0e82fe3}" Method="IArchivable">
      <Single Name="IsRoot" Type="bool">False</Single>
      <Single Name="MetaObject" Type="{81297157-7ec9-45ce-845e-84cab2b88ade}" Method="IArchivable">
        <Single Name="Guid" Type="System.Guid">437ff211-30d5-4e55-89b4-80093966e5c2</Single>
        <Single Name="ParentGuid" Type="System.Guid">fa2632c8-a11c-4d71-8df4-00a64bb35d20</Single>
        <Single Name="Name" Type="string">Servo_Testment_Main</Single>
        <Dictionary Type="{2c41fa04-1834-41c1-816e-303c7aa2c05b}" Name="Properties">
          <Entry>
            <Key>
              <Single Type="System.Guid">829a18f2-c514-4f6e-9634-1df173429203</Single>
            </Key>
            <Value>
              <Single Type="{829a18f2-c514-4f6e-9634-1df173429203}" Method="IArchivable">
                <Dictionary Type="{fa2ee218-a39b-4b6d-b249-49dbddbd168a}" Name="ParentObjects">
                  <Entry>
                    <Key>
                      <Single Type="System.Guid">d9b2b2cc-ea99-4c3b-aa42-1e5c49e65b84</Single>
                    </Key>
                    <Value>
                      <Single Type="System.Guid">707a7570-1a86-4ce1-831f-3dd8049110a5</Single>
                    </Value>
                  </Entry>
                </Dictionary>
              </Single>
            </Value>
          </Entry>
        </Dictionary>
        <Single Name="TypeGuid" Type="System.Guid">6f9dac99-8de1-4efc-8465-68ac443b7d08</Single>
        <Array Name="EmbeddedTypeGuids" Type="System.Guid">
          <Single Type="System.Guid">a9ed5b7e-75c5-4651-af16-d2c27e98cb94</Single>
          <Single Type="System.Guid">3b83b776-fb25-43b8-99f2-3c507c9143fc</Single>
        </Array>
        <Single Name="Timestamp" Type="long">636562758787237700</Single>
      </Single>
      <Single Name="Object" Type="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" Method="IArchivable">
        <Single Name="SpecialFunc" Type="{0db3d7bb-cde0-4416-9a7b-ce49a0124323}">None</Single>
        <Single Name="Implementation" Type="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Method="IArchivable">
          <Single Name="TextDocument" Type="{f3878285-8e4f-490b-bb1b-9acbb7eb04db}" Method="IArchivable">
            <Array Name="TextLines" Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}">
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">258</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">/////////////////////////////// instruction windows in chinsese  /////////////////////////////////////////</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">263</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">427</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">Message_Manager(state_in := Servo_Testment_State</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">323</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	, start_restart_indicator =&gt; Test_Process_Start_Restart</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">324</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	, Show_Message =&gt; Show_Text</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">327</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">260</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">261</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">/////////////////////////////// instruction windows in chinsese  /////////////////////////////////////////</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">262</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">16</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">// if ethercat not ready then return</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">225</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">IF NOT ECatCfgok_GV THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">234</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	DI_Block (enable := FALSE);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">17</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	DO_Block (enable := FALSE);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">18</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	RETURN;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">416</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">417</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">418</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">IF Num_of_Axis_GV &gt; 6 THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">419</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Servo_Testment_State := -5;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">28</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">222</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">235</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">DI_Block(enable := TRUE, DI_Array =&gt; Read_DI);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">223</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">DO_Block(enable := TRUE, DO_Array := Set_Do);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">623</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">DIA_Block(enable := TRUE, smoothTime := smTime</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">624</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	, MaxRawInputValue := analog_cap</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">630</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	, MinRawInputValue := analog_base</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">625</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	, DIA_Raw =&gt; Read_DIA_Raw</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">626</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	, DIA_Process =&gt; Read_DIA_Percentage</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">251</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">338</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">434</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">enb_axis (enable := Servo_Testment_State &gt; 9);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">437</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">FOR j := 1 TO WORD_TO_INT(Num_of_Axis_GV) DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">436</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	read_axis[j](axis := j - 1, enable :=  TRUE);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">580</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">581</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">635</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">timer(in:= Servo_Testment_State = 30, pt := T#2S);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">423</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">424</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">IF Servo_Testment_State &lt;&gt; -1 AND ((Read_DI[1] AND Read_DI[2]) OR manual_m01) THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">425</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Servo_Testment_State := 0;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">426</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">797</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">798</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">800</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">set_limit(execute := debugButton, axis := 0, speedLimit := speedLimit); // useless</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">752</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">757</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">IF Servo_Testment_State &lt; 130 THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">758</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	set_override(axesgroup := 0, enable := TRUE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">753</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	, velFactor := 1, accfactor := 1, jerkFactor := 1);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">759</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">ELSE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">760</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	set_override(axesgroup := 0, enable := TRUE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">761</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	, velFactor := Read_DIA_Percentage[0]/100</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">762</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	, accfactor := 1</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">763</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	, jerkFactor := 1</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">754</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">795</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">867</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">870</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">IF Servo_Testment_State = 0 THEN	// reset</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">871</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Set_Do[7]:= TRUE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1016</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Set_Do[8]:= TRUE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">869</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	homeErrOnce:= FALSE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">872</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">267</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">665</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">CASE Servo_Testment_State OF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">669</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-50: // analog cap and base difference too small</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">667</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		// please connection and input voltage</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">668</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		analog_cap[0];	// cap value</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">666</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		analog_base[0];	// base vaule</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">503</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">504</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-45: // axis not mov to corrent pos</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">495</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		i; // error axis;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">497</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-40: // if axis get err when moving</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">496</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		i; // error axis</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">428</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">430</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-35: // if some axis is not near 0 after homing</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">569</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		i; // error axis</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">565</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">566</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-33: // if some axis home err or time out</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">568</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		i;	// error axis</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">400</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">403</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-30: // if some axis home err</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">410</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		home_axis[i].ErrorID;	// homing err message</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">345</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">347</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-20: // if some axis can not enable</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">409</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		enb_axis.Err_Message;	// enable err message</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">333</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">411</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-10: // if button is not commanding right inputs</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">422</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		// plz check input button</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">420</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">334</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-5:	// config file contain more than 6 axis and exceed this program can handle</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">607</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">608</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-1:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">615</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF Read_DI[1] AND Read_DI[2] OR manual_m01 THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">612</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State:= 0;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">613</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		ELSIF  Read_DI[1] OR Read_DI[2] THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">614</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State := -10;	// if there is any input not receiving signal</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">611</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">269</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">273</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	0:	// push second button to enable all axis</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">328</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF Read_DI[3] AND Read_DI[4] AND Read_DI[5] AND Read_DI[6] OR manual_00 THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">330</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State:= 10;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">331</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		ELSIF  Read_DI[3] OR Read_DI[4] OR Read_DI[5] OR Read_DI[6] THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">329</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State := -10;	// if there is any input not receiving signal</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1017</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1018</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	5:	// restart</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">271</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		Servo_Testment_State := 10;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">336</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	10: // if 1~6 input is ok, waitting axis to enable</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">340</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF enb_axis.Done THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">342</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State := 20; // if enabled</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">344</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		ELSIF enb_axis.Error THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">341</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State := -20; // if some axis fail to enable</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">272</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">559</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	20: // push third button to home axis</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">560</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		FOR i := WORD_TO_INT(FirstAxis) TO WORD_TO_INT(LastAxis) DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">561</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			home_axis[i](axis := i - 1, execute := FALSE);	// reset blocks</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">348</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">376</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF Read_DI[7] AND Read_DI[8] AND Read_DI[9] OR homeErrOnce OR manual_20 THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">365</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			i:= WORD_TO_INT(FirstAxis);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">351</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State := 30;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">352</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		ELSIF Read_DI[7] OR Read_DI[8] OR Read_DI[9] THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">350</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State := -10;	// if there is any input not receiving signal</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">366</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">863</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	30: // start homing axis	// should not use I lkie in this case, is confilc with other state machine</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">367</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		Set_Do[7]:= TRUE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">380</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		home_axis[i](axis := i - 1, execute := TRUE, position := 0, buffermode := mcAborting);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">381</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF home_axis[LastAxis].Done THEN	// all axis according to config file had homed</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">384</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			FOR i := WORD_TO_INT(FirstAxis) TO WORD_TO_INT(LastAxis) DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">383</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				home_axis[i](axis := i - 1, execute := FALSE);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">386</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">377</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State := 40;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">397</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		ELSIF home_axis[i].Done AND i &lt;= WORD_TO_INT(LastAxis) THEN // if current axis homing done</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">378</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			timer(in:= FALSE);	// reset timer</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">398</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			i := i + 1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">402</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		ELSIF home_axis[i].Error THEN	// if current axis get err</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">562</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State := -30;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">564</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		ELSIF timer.Q THEN	// if current axis not finish homing in certen time</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">379</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State := -33;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">387</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">442</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	40: // check if all axis are home</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">441</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		i := WORD_TO_INT(FirstAxis - 1);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">449</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		WHILE (i &lt; WORD_TO_INT(LastAxis)) AND Servo_Testment_State = 40 DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">445</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			i := i + 1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">446</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			IF read_axis[i].Pos &gt; check_pos_err OR read_axis[i].Pos &lt; -check_pos_err THEN // if current axis pos more than check_pos_err</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">447</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				Servo_Testment_State := -35;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">444</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">450</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_WHILE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">866</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF Servo_Testment_State &lt;&gt; -35 THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">451</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Set_Do[8]:= TRUE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">452</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State := 50;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">391</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">472</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	50: // push fourth button to order motor turn</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">473</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		FOR i := WORD_TO_INT(FirstAxis) TO WORD_TO_INT(LastAxis) DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">474</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			mov_axis[i](axis := i - 1, execute := FALSE);	// reset blocks</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">454</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">456</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF (Read_DI[10] AND Read_DI[11] AND Read_DI[12]) OR homeErrOnce OR manual_50 THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">457</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State := 60;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">458</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		ELSIF Read_DI[10] OR Read_DI[11] OR Read_DI[12] THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">459</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State := -10;	// if there is any input not receiving signal</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">461</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">486</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	60:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1015</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		axis_mov_counter := 0;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">468</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		i := WORD_TO_INT(FirstAxis - 1);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">589</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		WHILE i &lt; WORD_TO_INT(LastAxis) AND Servo_Testment_State = 60 DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">469</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			i := i + 1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">481</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			mov_axis[i](axis := i - 1, Execute := TRUE, Position := FirstPos</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">482</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			, Velocity := vel, Acceleration := acc, Deceleration := Acc, jerk := jerk</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">483</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			, Direction := mcShortestWay, BufferMode := mcAborting</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">487</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">488</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			IF mov_axis[i].Done THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">492</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				axis_mov_counter := axis_mov_counter + 1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">494</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			ELSIF  mov_axis[i].Error THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">941</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				Servo_Testment_State := -40;	// axis err when moving</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">943</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				IF NOT homeErrOnce THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">946</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">					homeErrOnce := TRUE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">944</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">					Servo_Testment_State := 5;	// give secend chance</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">489</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">470</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">498</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_WHILE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">601</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF axis_mov_counter &gt;= WORD_TO_INT(LastAxis - (FirstAxis - 1)) AND Servo_Testment_State &lt;&gt; -40 THEN // if all axis mov done</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">602</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			FOR i := WORD_TO_INT(FirstAxis) TO WORD_TO_INT(LastAxis) DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">603</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				mov_axis[i](axis := i - 1, execute := FALSE);	// reset blocks</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">501</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">500</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State := 70;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">466</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">505</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	70: // check pos</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">506</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		i :=  WORD_TO_INT(FirstAxis - 1);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">507</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		WHILE i &lt; WORD_TO_INT(LastAxis) AND Servo_Testment_State = 70 DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">508</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			i := i + 1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">509</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			IF FirstPos - read_axis[i].Pos &lt; -check_pos_err OR FirstPos - read_axis[i].Pos &gt; check_pos_err THEN // if current axis pos more than check_pos_err</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">510</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				Servo_Testment_State := -45;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">511</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">599</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_WHILE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">512</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">513</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF Servo_Testment_State &lt;&gt; -45 THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">514</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State := 80;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">557</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">392</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">516</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	80: // motor start to turn</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">517</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		axis_mov_counter := 0;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">518</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		i := FirstAxis - 1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">590</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		WHILE i &lt; WORD_TO_INT(LastAxis) AND Servo_Testment_State = 80 DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">520</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			i := i + 1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">521</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			mov_axis[i](axis := i - 1, Execute := TRUE, Position := SecondPos</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">522</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			, Velocity := vel, Acceleration := acc, Deceleration := Acc, jerk := jerk</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">523</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			, Direction := mcShortestWay, BufferMode := mcAborting</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">524</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">525</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			IF mov_axis[i].Done THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">526</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				axis_mov_counter := axis_mov_counter + 1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">527</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			ELSIF  mov_axis[i].Error THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">528</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				Servo_Testment_State := -40;	// axis err when moving</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">529</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">530</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_WHILE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">531</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF axis_mov_counter &gt;= LastAxis - (FirstAxis - 1) AND Servo_Testment_State &lt;&gt; -40 THEN // if all axis mov done</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">532</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State := 90;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">535</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">533</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">537</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	90: // check pos</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">538</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		i := FirstAxis - 1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">539</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		WHILE i &lt; WORD_TO_INT(LastAxis) AND Servo_Testment_State = 90 DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">540</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			i := i + 1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">541</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			IF SecondPos - read_axis[i].Pos &lt; -check_pos_err OR SecondPos - read_axis[i].Pos &gt; check_pos_err THEN // if current axis pos more than check_pos_err</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">542</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				Servo_Testment_State := -45;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">543</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">544</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_WHILE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">604</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF Servo_Testment_State &lt;&gt; -45 THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">605</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			FOR i := WORD_TO_INT(FirstAxis) TO WORD_TO_INT(LastAxis) DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">606</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				mov_axis[i](axis := i - 1, execute := FALSE);	// reset blocks</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">545</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">546</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State := 100;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">618</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">616</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">862</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	100: // set analog input base value, click second button to remember</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">638</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		analog_base[0] := Read_DIA_Raw[0];</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">639</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF Read_DI[3] AND Read_DI[4] AND Read_DI[5] AND Read_DI[6] OR manual_jump_analog_check THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">640</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State:= 110;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">641</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		ELSIF  Read_DI[3] OR Read_DI[4] OR Read_DI[5] OR Read_DI[6] THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">642</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State := -10;	// if there is any input not receiving signal</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">781</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">782</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">861</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	110: // set analog input cap value, click third button to remember</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">784</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		analog_cap[0] := Read_DIA_Raw[0];</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">785</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF Read_DI[7] AND Read_DI[8] AND Read_DI[9] OR manual_jump_analog_check THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">786</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State := 120;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">787</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		ELSIF Read_DI[7] OR Read_DI[8] OR Read_DI[9] THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">788</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State := -10;	// if there is any input not receiving signal</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">801</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">657</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">658</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	120: // check difference between cap and base</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">661</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF (analog_cap[0] - analog_base[0] &gt; analog_difference) OR manual_jump_analog_check THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">662</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State := 130;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">664</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		ELSE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">660</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Servo_Testment_State := -50;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">644</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">670</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	130:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">393</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">388</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	//100: // procedure done</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">270</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">252</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_CASE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">680</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">681</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">(*IF Servo_Testment_State &lt; 130 THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">682</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	analog_motor_state := -1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">884</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1112</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1114</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">(*************</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1113</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">original Servo_Testment_State &gt; 130 is designed for analog control axis speed</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1115</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">currently this state is use for servo elder testment</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">675</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">*******************)</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1400</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">CASE analog_motor_state	OF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">678</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">683</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-1:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">684</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		//analog_motor_state := 0;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">686</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	0:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">687</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		FOR i := 1 TO WORD_TO_INT(Num_of_Axis_GV) DO	// should not use I here because this I is conflic with test state</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">688</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			mov_axis[i](axis := i - 1, execute := FALSE);	// reset blocks</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">691</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">817</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		analog_motor_state := 10;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1019</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		debugTimer(in:= FALSE);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">802</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		(*</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">812</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	10:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">813</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		mov_axis[1](axis := 0, Execute := TRUE, Position := 0);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">814</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		mov_axis[2](axis := 1, Execute := TRUE, Position := 0);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">810</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		mov_axis[3](axis := 2, Execute := TRUE, Position := 0);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">806</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		mov_axis[4](axis := 3, Execute := TRUE, Position := 0);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">811</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		mov_axis[5](axis := 4, Execute := TRUE, Position := 0);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">816</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		mov_axis[6](axis := 5, Execute := TRUE, Position := 0);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">807</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		debugTimer (in:= TRUE, pt := T#5S);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">818</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF debugTimer.Q THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">819</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			debugTimer(in:= FALSE);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">820</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">821</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			FOR i := 1 TO WORD_TO_INT(Num_of_Axis_GV) DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">822</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				mov_axis[i](axis := i - 1, execute := FALSE);	// reset blocks</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">823</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">856</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			analog_motor_state := 20;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">857</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">858</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Movs[0](axesgroup := 0, Execute := FALSE);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">859</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">809</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Movs[1](axesgroup := 0, Execute := FALSE);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">824</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">825</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">837</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	20:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">838</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		Movs[0](axesgroup := 0, Execute := TRUE, Position := ADR(FirstReachPos)</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">839</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			, Velocity := vell, Acceleration := accl, Deceleration := Accl, jerk := jerkl</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">840</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			, coordsystem := mcMcs, BufferMode := mcAborting</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">841</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			, TransitionMode := tmNone, TransitionParameter:=ADR(GrRelCorner)</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">847</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			, Error =&gt; MovErr);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">855</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF Movs[0].Done THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">850</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Movs[0](axesgroup := 0, Execute := FALSE);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">849</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			analog_motor_state := 30;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">851</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">842</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	30:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">843</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		Movs[1](axesgroup := 0, Execute := TRUE, Position := ADR(SecondReachPos)</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">844</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			, Velocity := vell, Acceleration := accl, Deceleration := Accl, jerk := jerkl</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">845</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			, coordsystem := mcMcs, BufferMode := mcAborting</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">846</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			, TransitionMode := tmNone, TransitionParameter:=ADR(GrRelCorner)</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">852</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			, Error =&gt; MovErr);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">860</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF Movs[1].Done THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">853</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			Movs[1](axesgroup := 0, Execute := FALSE);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">854</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			analog_motor_state := 20;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">803</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1253</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	*)</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1254</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_CASE*)</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1270</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1271</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">IF Servo_Testment_State &lt; 130 THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1272</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	servo_elder_state := -1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1266</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1273</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">CASE servo_elder_state OF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1339</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-1:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1342</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF elder_MoveType = 0 THEN	// if control in abs </Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1340</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			servo_elder_state := 0;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1344</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		ELSIF elder_MoveType = 1 THEN	// if control in vel</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1341</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			servo_elder_state := 30;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1275</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1276</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	0:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1277</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		FOR i := 1 TO WORD_TO_INT(Num_of_Axis_GV) DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1278</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			mov_axis[i](axis := i - 1, execute := FALSE);	// reset blocks</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1338</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1279</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">685</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		servo_elder_state := 10;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">708</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	10:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">709</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		axis_mov_counter := 0;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">710</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		i := 0;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">711</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		WHILE i &lt; WORD_TO_INT(LastAxis - (FirstAxis - 1)) AND Servo_Testment_State &lt;&gt; -40 DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">712</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			i := i + 1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">713</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			mov_axis[i](axis := i - 1, Execute := TRUE, Position := analogFirPos</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">714</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				, velocity := elderVel, Acceleration := elderACC, Deceleration := elderACC, Jerk := elderJerk</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">715</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				, Direction := mcShortestWay, BufferMode := mcAborting</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">716</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">717</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			IF mov_axis[i].Done THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">718</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				axis_mov_counter := axis_mov_counter + 1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">719</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			ELSIF  mov_axis[i].Error THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">720</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				Servo_Testment_State := -40;	// axis err when moving</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">721</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">722</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_WHILE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">725</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF axis_mov_counter &gt;= 6 AND Servo_Testment_State &lt;&gt; -40 THEN // if all axis mov done</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1020</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			FOR i := WORD_TO_INT(FirstAxis) TO WORD_TO_INT(LastAxis) DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">727</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				mov_axis[i](axis := i - 1, execute := FALSE);	// reset blocks</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">723</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">724</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			servo_elder_state := 20;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">728</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">729</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	20:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">730</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		axis_mov_counter := 0;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">731</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		i := 0;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">732</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		WHILE i &lt; WORD_TO_INT(LastAxis - (FirstAxis - 1)) AND Servo_Testment_State &lt;&gt; -40 DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">733</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			i := i + 1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1026</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			mov_axis[i](axis := i - 1, Execute := TRUE, Position := analogSecPos</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">735</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				, velocity := elderVel, Acceleration := elderACC, Deceleration := elderACC, Jerk := elderJerk</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">736</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				, Direction := mcShortestWay, BufferMode := mcAborting</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">737</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">738</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			IF mov_axis[i].Done THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">739</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				axis_mov_counter := axis_mov_counter + 1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">740</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			ELSIF  mov_axis[i].Error THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">741</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				Servo_Testment_State := -40;	// axis err when moving</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">742</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">743</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_WHILE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">744</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF axis_mov_counter &gt;= 6 AND Servo_Testment_State &lt;&gt; -40 THEN // if all axis mov done</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">745</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			FOR i := WORD_TO_INT(FirstAxis) TO WORD_TO_INT(LastAxis) DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">746</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				mov_axis[i](axis := i - 1, execute := FALSE);	// reset blocks</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">747</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">748</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			servo_elder_state := 10;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">679</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1346</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	30:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1347</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		FOR sc_i := 0 TO 5 DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1348</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			SpeedMovFir[sc_i](axis := sc_i,execute := FALSE);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1349</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			SpeedMovSec[sc_i](axis := sc_i,execute := FALSE);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1350</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1351</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		SCTimer(in := FALSE);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1352</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		SCGroupSwitch := FALSE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1354</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		servo_elder_state := 40;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1355</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	40:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1356</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		SCTimer(in := TRUE, pt := SCMovTime);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1357</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF SCTimer.Q THEN	// if time reached</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1358</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			IF NOT SCGroupSwitch THEN	//decide which motor group is time to switch dir</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1359</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				SCGroupSwitch := TRUE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1360</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				IF SCFirDir = mcPositiveDirection THEN	// if first group is moving positivily</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1361</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">					SCFirDir := mcNegativeDirection;	// then switch to negative</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1362</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				ELSE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1363</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">					SCFirDir := mcPositiveDirection;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1364</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1365</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			ELSE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1366</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				SCGroupSwitch := FALSE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1367</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				IF SCSecDir = mcPositiveDirection THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1368</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">					SCSecDir := mcNegativeDirection;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1369</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				ELSE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1370</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">					SCSecDir := mcPositiveDirection;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1371</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1372</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1373</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1374</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		FOR sc_i := 0 TO 5 BY 2 DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1375</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			SpeedMovFir[sc_i](axis := sc_i,execute := NOT (SCTimer.Q AND SCGroupSwitch)	// only switch off when timer is alarted and first group direction is switched</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1376</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				, velocity := elderVel, Acceleration := elderACC, Deceleration := elderACC, Jerk := elderJerk</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1410</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				, Direction := SCFirDir, Buffermode := mcAborting);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1411</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			IF  SpeedMovFir[sc_i].Error THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1412</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				Servo_Testment_State := -40;	// axis err when moving</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1377</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1378</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1379</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		FOR sc_i := 1 TO 5 BY 2 DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1380</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			SpeedMovSec[sc_i](axis := sc_i,execute := NOT (SCTimer.Q AND NOT SCGroupSwitch)	// only switch off when timer is alarted and second group direction is switched</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1381</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				, velocity := elderVel, Acceleration := elderACC, Deceleration := elderACC, Jerk := elderJerk</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1417</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				, Direction := SCSecDir, Buffermode := mcAborting);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1418</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			IF  SpeedMovSec[sc_i].Error THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1419</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				Servo_Testment_State := -40;	// axis err when moving</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1382</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1383</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1384</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1385</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF SCTimer.Q THEN	// if time reached</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1386</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			SCTimer(in := FALSE);	// switch off timer</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">677</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">676</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_CASE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1309</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">(*</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1310</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-50: // analog cap and base difference too small</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1311</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		// please connection and input voltage</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1312</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		analog_cap[0];	// cap value</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1313</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		analog_base[0];	// base vaule</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1314</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1315</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-45: // axis not mov to corrent pos</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1316</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		i; // error axis;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1317</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-40: // if axis get err when moving</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1318</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		i; // error axis</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1319</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1320</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-35: // if some axis is not near 0 after homing</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1321</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		i; // error axis</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1322</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1323</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-33: // if some axis home err or time out</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1324</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		i;	// error axis</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1325</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1326</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-30: // if some axis home err</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1327</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		home_axis[i].ErrorID;	// homing err message</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1328</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1329</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-20: // if some axis can not enable</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1330</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		enb_axis.Err_Message;	// enable err message</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1331</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1332</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-10: // if button is not commanding right inputs</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1333</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		// plz check input button</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1334</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1335</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-5:	// config file contain more than 6 axis and exceed this program can handle</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">962</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	*)</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">963</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">IF Servo_Testment_State &gt; -1 THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">964</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	errlightcontrolstate := 0;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">948</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">955</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">CASE errlightcontrolstate OF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">957</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	0:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">996</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF Servo_Testment_State &lt; 0 THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">958</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			ErrLightCounter := ABS(INT_TO_WORD(Servo_Testment_State));</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">959</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			errlightcontrolstate := 10;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">960</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">961</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	10:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">956</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">949</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_CASE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">216</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">31</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">(* legacy ------</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">181</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">// read di</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">211</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">Read_6Ax_DI(Enable:=Num_of_axis_GV &gt; 0, Offset:=143, Value=&gt;DI_Raw);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">49</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">new_DI_Value := UDINT_TO_UINT(DI_Raw);	// need convert to UINT otherwise it contain much more unwanted bits, it's not necessary but just keep this line to remember</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">194</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">// judge which bit is true</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">195</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">FOR forCounter := 1 TO UINT_TO_INT(SIZEOF(Read_DI)) DO // loop all bool value</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">198</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Read_DI[forCounter] := UINT_TO_BOOL(new_DI_Value AND SHL(1, forCounter - 1));</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">185</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">72</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">108</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">// write do</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">144</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">new_Do_Value:= 0;	// initialize </Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">145</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">85</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">(*	useless too complicated, no need to do the real calculation</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">86</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">FOR forCounter := 0 TO UINT_TO_INT(SIZEOF(SetDo)) DO // loop all bool value</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">105</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	IF SetDo[forCounter] THEN	// if out put is true</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">95</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		squareValue := 1;	// first value is 1, 2^0=1</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">98</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF forCounter &lt;&gt; 0 THEN // if is not first value</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">99</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			FOR squareCounter := 1 TO forCounter DO	// calculate dec value</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">100</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				squareValue := squareValue * 2;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">97</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">109</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">90</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		DoValue := DoValue + INT_TO_UINT(squareValue);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">87</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">113</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">147</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">*)</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">149</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">// shift mamary according to bool</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">160</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">FOR forCounter := 1 TO UINT_TO_INT(SIZEOF(Set_Do)) DO // loop all bool value</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">161</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	IF Set_Do[forCounter] THEN	// if out put is true</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">162</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		new_Do_Value := new_Do_Value + SHL(1, forCounter - 1);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">159</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">146</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">114</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">76</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">IF new_Do_Value &lt;&gt; old_Do_Value THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">63</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	old_Do_Value := new_Do_Value;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">131</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">175</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">Write_6Ax_Do(Enable:=Num_of_axis_GV &gt; 0, Offset:=143, Value:=old_Do_Value);	// write DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">132</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">---------*)</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">896</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">// debug</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">901</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">IF NOT starter THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">919</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	starter := TRUE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">903</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	found_0 := found_1 := found_2 := FALSE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">902</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	offsetValue := 0;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">215</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">931</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">TestAin_0(enable:= TRUE, offset :=offsetValue, value=&gt;read_0);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">932</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">TestAin_1(enable:= TRUE, offset :=offsetValue, value=&gt;read_1);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">933</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">TestAin_2(enable:= TRUE, offset :=offsetValue, value=&gt;read_2);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">236</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">237</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">IF read_0 &gt; try THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">238</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	try := read_0 - MaxmentOffset;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">239</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">912</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">try2 := (UINT_TO_REAL(read_0)/UINT_TO_REAL(try))*100;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">880</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">881</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">IF read_0 &gt; target_low AND read_0 &lt; target_high THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">906</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	found_0 := TRUE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">922</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">923</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">924</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">IF read_1 &gt; target_low AND read_1 &lt; target_high THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">925</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	found_1 := TRUE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">926</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">927</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">928</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">IF read_2 &gt; target_low AND read_2 &lt; target_high THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">929</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	found_2 := TRUE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">915</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">907</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">913</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">IF NOT found_0 AND NOT found_1 AND NOT found_2 OR maunl_next THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">916</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	offsetValue := offsetValue + 1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">914</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	maunl_next := found_0 := found_1 := found_2 := FALSE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1036</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1037</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">242</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">//Debug area start-------------------------------------------------------------------</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1045</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">// read how many axis has been config</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1059</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">ReadCfg(axisnumber =&gt; Num_of_axis);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1063</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">FOR d_i := 0 TO 5 DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1079</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	PowerState[d_i](axis := d_i, enable := TRUE);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1062</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	AxisMeasure[d_i](axis := d_i, enable := TRUE);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1064</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1065</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">PowerState[0].State;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1066</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">PowerState[1].State;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1067</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">PowerState[2].State;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1068</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">PowerState[3].State;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1069</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">PowerState[4].State;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1072</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">PowerState[5].State;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1073</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">PowerState[0].Valid;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1074</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">PowerState[1].Valid;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1075</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">PowerState[2].Valid;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1076</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">PowerState[3].Valid;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1077</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">PowerState[4].Valid;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1080</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">PowerState[5].Valid;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1081</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[0].Valid;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1082</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[1].Valid;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1083</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[2].Valid;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1084</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[3].Valid;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1085</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[4].Valid;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1088</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[5].Valid;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1089</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[0].Pos;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1090</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[1].Pos;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1091</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[2].Pos;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1092</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[3].Pos;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1093</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[4].Pos;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1094</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[5].Pos;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1095</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[0].Speed;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1096</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[1].Speed;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1097</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[2].Speed;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1098</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[3].Speed;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1099</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[4].Speed;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1100</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[5].Speed;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1101</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[0].Torque;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1102</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[1].Torque;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1103</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[2].Torque;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1104</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[3].Torque;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1105</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[4].Torque;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1106</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[5].Torque;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1107</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[0].Acc;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1108</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[1].Acc;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1109</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[2].Acc;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1110</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[3].Acc;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1111</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[4].Acc;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1078</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">AxisMeasure[5].Acc;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1116</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1250</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">// speed control test</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1251</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">IF NOT sc_enb THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1252</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	SC_State := 0;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1117</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1431</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">CASE SC_State OF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1122</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-10:	// error will moving</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1126</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	0:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1140</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF SC_Enb THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1141</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			FOR sc_i := 0 TO 5 DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1142</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				SpeedMovFir[sc_i](axis := sc_i,execute := FALSE);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1143</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				SpeedMovSec[sc_i](axis := sc_i,execute := FALSE);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1199</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1208</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			SCTimer(in := FALSE);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1129</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			SCGroupSwitch := FALSE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1130</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			sc_state := 10;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1131</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1201</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	10:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1204</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		SCTimer(in := TRUE, pt := SCMovTime);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1207</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF SCTimer.Q THEN	// if time reached</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1209</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			IF NOT SCGroupSwitch THEN	//decide which motor group is time to switch dir</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1219</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				SCGroupSwitch := TRUE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1222</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				IF SCFirDir = mcPositiveDirection THEN	// if first group is moving positivily</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1223</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">					SCFirDir := mcNegativeDirection;	// then switch to negative</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1225</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				ELSE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1221</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">					SCFirDir := mcPositiveDirection;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1214</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1216</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			ELSE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1226</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				SCGroupSwitch := FALSE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1227</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				IF SCSecDir = mcPositiveDirection THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1228</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">					SCSecDir := mcNegativeDirection;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1229</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				ELSE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1230</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">					SCSecDir := mcPositiveDirection;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1210</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1206</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1177</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1178</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		FOR sc_i := 0 TO 5 BY 2 DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1179</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			SpeedMovFir[sc_i](axis := sc_i,execute := NOT (SCTimer.Q AND SCGroupSwitch)	// only switch off when timer is alarted and first group direction is switched</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1180</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				, velocity := SCVel, Acceleration := SCACC, Deceleration := SCACC, Jerk := SCJerk</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1420</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				, Direction := SCFirDir, Buffermode := mcAborting);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1423</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			IF SpeedMovFir[sc_i].Error THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1422</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				SC_State := -10;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1184</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1185</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1189</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		FOR sc_i := 1 TO 5 BY 2 DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1190</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			SpeedMovSec[sc_i](axis := sc_i,execute := NOT (SCTimer.Q AND NOT SCGroupSwitch)	// only switch off when timer is alarted and second group direction is switched</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1191</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				, velocity := SCVel, Acceleration := SCACC, Deceleration := SCACC, Jerk := SCJerk</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1428</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				, Direction := SCSecDir, Buffermode := mcAborting);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1429</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			IF SpeedMovSec[sc_i].Error THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1430</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				SC_State := -10;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1192</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1158</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_FOR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1231</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1232</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		IF SCTimer.Q THEN	// if time reached</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1233</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">			SCTimer(in := FALSE);	// switch off timer</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1160</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1159</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		//check</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1161</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		SpeedMovFir[0].Active;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1162</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		SpeedMovSec[1].Active;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1163</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		SpeedMovFir[2].Active;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1164</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		SpeedMovSec[3].Active;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1165</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		SpeedMovFir[4].Active;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1166</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		SpeedMovSec[5].Active;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1167</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		SpeedMovFir[0].Busy;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1168</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		SpeedMovSec[1].Busy;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1169</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		SpeedMovFir[2].Busy;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1170</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		SpeedMovSec[3].Busy;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1171</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		SpeedMovFir[4].Busy;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1123</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		SpeedMovSec[5].Busy;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1237</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_CASE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1243</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1244</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">IF NOT TSSwitch THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1248</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	TSDir := mcNegativeDirection;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1249</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">ELSE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1245</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	TSDir := mcPositiveDirection;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1238</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1239</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">MovSpeed(axis := 0, execute := TryMS</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1240</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				, velocity := SCVel, Acceleration := SCACC, Deceleration := SCACC, Jerk := SCJerk</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1038</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">				, Direction := TSDir, Buffermode := mcAborting);</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">5</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">//Debug area end-------------------------------------------------------------------</Single>
              </Single>
            </Array>
          </Single>
        </Single>
        <Single Name="Interface" Type="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Method="IArchivable">
          <Single Name="TextDocument" Type="{f3878285-8e4f-490b-bb1b-9acbb7eb04db}" Method="IArchivable">
            <Array Name="TextLines" Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}">
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">277</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">PROGRAM Servo_Testment_Main</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">278</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">VAR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">279</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Set_Do: ARRAY [1..8] OF BOOL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">280</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Read_DI: ARRAY [1..12] OF BOOL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">628</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Read_DIA_Percentage :  ARRAY [0..7] OF REAL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">406</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Read_DIA_Raw :  ARRAY [0..7] OF UINT;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1012</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1013</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	// axis define</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1014</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	FirstAxis : WORD := 1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">282</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	LastAxis : WORD := 6;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">283</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	//DI</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">284</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	DI_Block : Digital_Input;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">285</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">286</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	//DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">287</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	DO_Block : Digital_Output;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">288</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">289</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	//DIA</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">290</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	smTime : TIME := T#250MS;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">291</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	DIA_Block : Digital_Input_Analog;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">292</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">293</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">294</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	// Testment functions</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">295</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Servo_Testment_State : INT := -1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">321</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Test_Process_Start_Restart, Error_State : BOOL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">322</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Message_Manager : Testment_Message_Manager;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">296</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Show_Text : WSTRING;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">356</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	enb_axis : AuxAxis_PowerOn;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">354</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	read_axis : ARRAY [1..6] OF Arcalibrary.MCAT_ReadAxisMeasures;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">355</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	home_axis : ARRAY [1..6] OF Arcalibrary.MC_Home;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">394</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	i, j, k : INT;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">584</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	timer : ton;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">463</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	check_pos_err : REAL := 5;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">464</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">480</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	mov_axis : ARRAY [1..6] OF ArcaLibrary.MC_MoveAbsolute;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">475</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	FirstPos : REAL := 360;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">476</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	SecondPos : REAL := -360;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">477</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	CurrentPos : REAL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">478</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Vel : REAL := 180;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">479</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Acc : REAL := 1900;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">465</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Jerk : REAL := 9500;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">620</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	axis_mov_counter : INT;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">621</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">622</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	analog_cap ,analog_base : ARRAY [0..7] OF UINT;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">750</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	analog_difference : UINT := 12500; // 5v should be around 12900 ~ 13000</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">671</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	set_override : ArcaLibrary.MC_GroupSetOverride;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">672</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	set_limit : ArcaLibrary.MCAT_AxisSetLimits;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">673</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	// analog control motor speed function</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">674</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	analog_motor_state :INT := -1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">799</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	debugButton : BOOL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1024</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	speedLimit : REAL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1025</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	analogFirPos : REAL := 380;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1021</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	analogSecPos : REAL := -380;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1022</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	analogVel : REAL := 18000;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1023</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	analogACC : REAL := 900000;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">297</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	analogJerk : REAL := 45000000;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">298</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	(* legacy ------</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">299</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	forCounter: INT;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">300</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	//DI</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">301</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Read_6Ax_DI: Arcalibrary.ECAT_GetPdi_U32;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">302</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	DI_Raw : UDINT;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">303</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	new_DI_Value : UINT;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">304</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">305</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	//DO</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">306</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	new_Do_Value, old_Do_Value : UINT;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">307</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Write_6Ax_Do: Arcalibrary.ECAT_SetPdo_U32;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1255</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	------*)</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1256</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1258</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	// servo elder program</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1259</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	servo_elder_state :INT := -1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1263</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	elder_MoveType : WORD := 1;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1264</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	elderVel : REAL := 18000;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1265</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	elderACC : REAL := 900000;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1257</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	elderJerk : REAL := 45000000;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">308</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">309</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">310</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	// 6 axis io test</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">311</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	try: UINT;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">312</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	try2 : REAL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">313</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	try3 : REAL := 3.9;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">934</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	read_0 : UINT;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">935</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	read_1 : UDINT;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">314</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	read_2 :ULINT;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">315</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	andValue : WORD;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">316</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	switch : BOOL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">317</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	offsetValue : WORD := 147;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">920</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	TestAin_0: Arcalibrary.ECAT_GetPdi_U16;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">921</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	TestAin_1: Arcalibrary.ECAT_GetPdi_U32;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">318</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	TestAin_2: Arcalibrary.ECAT_GetPdi_U64;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">894</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	MaxmentOffset : UINT := 50;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">895</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	found_0, found_1, found_2, starter, maunl_next : BOOL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">917</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	target_low : UINT := 12700;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">572</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	target_high : UINT := 13000;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">885</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">886</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	debugTimer : ton;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">887</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	FirstReachPos :  ARRAY [1..6] OF REAL := [0.6, -0.2, 0.606, -31.346, 178.434, 149.160];</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">888</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	SecondReachPos :  ARRAY [1..6] OF REAL := [0.6, 0.2, 0.606, -31.346, 178.434, 149.160];</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">889</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Vell : REAL := 10;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">890</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Accl : REAL := 10;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">891</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Jerkl : REAL := 10;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">892</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	GrRelCorner :REAL := 0.5;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">893</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	MovErr : BOOL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">873</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	//Movs : ARRAY [0..6] OF ArcaLibrary.MC_MoveLinearAbsolute;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">954</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">950</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	GiveErrLightTime : WORD;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">952</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	ErrLightControlState : INT;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">951</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	ErrLightTimer : Ton;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">878</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	ErrLightCounter : WORD;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">936</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	// debug</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">940</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	// --- because of homing bug (new servo need to home twice), get some function foe step 30</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">937</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	homeErrOnce : BOOL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1027</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	//---</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1028</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1029</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	// debug</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1031</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	manual_m01 : BOOL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">319</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	manual_00 : BOOL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1032</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	manual_20 : BOOL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1033</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	manual_50 : BOOL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1039</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	manual_jump_analog_check : BOOL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1040</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1042</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	// debug para start---------------------------</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1043</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	// read cfg message</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1044</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	ReadCfg : ArcaLibrary.SYS_GetConfigInfo;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1050</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Num_of_Axis:WORD;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1051</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	PowerState : ARRAY [0..5] OF ArcaLibrary.MCAT_ReadPowerStatus;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1049</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	AxisMeasure : ARRAY [0..5] OF ArcaLibrary.MCAT_ReadAxisMeasures;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1118</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	d_i, d_y : INT;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1119</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1128</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	//speed control test</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1203</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	SC_Enb : BOOL; </Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1197</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	SCMovTime : TIME := T#50MS;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1120</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	SCTimer : TON;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1134</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	SC_State : INT;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1125</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	SC_i,SC_y : INT;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1133</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	SpeedMovFir : ARRAY [0..5] OF ArcaLibrary.MC_MoveVelocity;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1152</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	SpeedMovSec : ARRAY [0..5] OF ArcaLibrary.MC_MoveVelocity;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1153</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	SCVel : REAL := 18000;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1154</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	SCACC : REAL := 900000;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1121</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	SCJerk : REAL := 45000000;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1194</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	SCFirDir : ArcaLibrary.mc_Direction := mcPositiveDirection;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1193</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	SCSecDir : ArcaLibrary.mc_Direction := mcNegativeDirection;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1234</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	SCGroupSwitch : BOOL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1235</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1236</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	// test speed move</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1242</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	TryMS : BOOL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1241</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	TSSwitch : BOOL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1246</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	MovSpeed : ArcaLibrary.MC_MoveVelocity;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1041</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	TSDir : ArcaLibrary.mc_Direction := mcPositiveDirection;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1035</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	// debug para end-----------------------------------</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">320</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_VAR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
            </Array>
          </Single>
        </Single>
        <Single Name="UniqueIdGenerator" Type="string">1431</Single>
        <Single Name="POULevel" Type="{8e575c5b-1d37-49c6-941b-5c0ec7874787}">Standard</Single>
        <List Name="ChildObjectGuids" Type="System.Collections.ArrayList" />
        <Single Name="AddAttributeSubsequent" Type="bool">False</Single>
      </Single>
      <Single Name="ParentSVNodeGuid" Type="System.Guid">707a7570-1a86-4ce1-831f-3dd8049110a5</Single>
      <Array Name="Path" Type="string">
        <Single Type="string">CODESYS_Control_x86_Arca_Control_SM</Single>
        <Single Type="string">PLC Logic</Single>
        <Single Type="string">Application</Single>
        <Single Type="string">Testment_Servo_Function_Test</Single>
      </Array>
      <Single Name="Index" Type="int">-1</Single>
    </Single>
    <Single Type="{6198ad31-4b98-445c-927f-3258a0e82fe3}" Method="IArchivable">
      <Single Name="IsRoot" Type="bool">False</Single>
      <Single Name="MetaObject" Type="{81297157-7ec9-45ce-845e-84cab2b88ade}" Method="IArchivable">
        <Single Name="Guid" Type="System.Guid">b1a5db22-918c-48a4-9cb5-efb7e0c1848b</Single>
        <Single Name="ParentGuid" Type="System.Guid">fa2632c8-a11c-4d71-8df4-00a64bb35d20</Single>
        <Single Name="Name" Type="string">Testment_Message_Manager</Single>
        <Dictionary Type="{2c41fa04-1834-41c1-816e-303c7aa2c05b}" Name="Properties">
          <Entry>
            <Key>
              <Single Type="System.Guid">829a18f2-c514-4f6e-9634-1df173429203</Single>
            </Key>
            <Value>
              <Single Type="{829a18f2-c514-4f6e-9634-1df173429203}" Method="IArchivable">
                <Dictionary Type="{fa2ee218-a39b-4b6d-b249-49dbddbd168a}" Name="ParentObjects">
                  <Entry>
                    <Key>
                      <Single Type="System.Guid">d9b2b2cc-ea99-4c3b-aa42-1e5c49e65b84</Single>
                    </Key>
                    <Value>
                      <Single Type="System.Guid">707a7570-1a86-4ce1-831f-3dd8049110a5</Single>
                    </Value>
                  </Entry>
                </Dictionary>
              </Single>
            </Value>
          </Entry>
        </Dictionary>
        <Single Name="TypeGuid" Type="System.Guid">6f9dac99-8de1-4efc-8465-68ac443b7d08</Single>
        <Array Name="EmbeddedTypeGuids" Type="System.Guid">
          <Single Type="System.Guid">a9ed5b7e-75c5-4651-af16-d2c27e98cb94</Single>
          <Single Type="System.Guid">3b83b776-fb25-43b8-99f2-3c507c9143fc</Single>
        </Array>
        <Single Name="Timestamp" Type="long">636487222234340650</Single>
      </Single>
      <Single Name="Object" Type="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" Method="IArchivable">
        <Single Name="SpecialFunc" Type="{0db3d7bb-cde0-4416-9a7b-ce49a0124323}">None</Single>
        <Single Name="Implementation" Type="{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Method="IArchivable">
          <Single Name="TextDocument" Type="{f3878285-8e4f-490b-bb1b-9acbb7eb04db}" Method="IArchivable">
            <Array Name="TextLines" Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}">
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">37</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">_case := state_in;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">40</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">41</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">IF state_in &lt; 0 THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">44</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Error_State := TRUE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">46</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">ELSE </Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">42</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Error_State := FALSE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">43</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">73</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">76</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">IF state_in &lt;&gt; 0 THEN</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">75</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Start_Restart_indicator := FALSE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">77</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_IF</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">31</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">103</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">CASE _case OF </Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">104</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-50:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">99</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		Show_Message := " 错误_50 ";</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">100</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-45:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">97</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		Show_Message := " 错误_45 ";</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">98</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-40:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">95</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		Show_Message := " 错误_40 ";</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">96</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-35:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">93</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		Show_Message := " 错误_35 ";</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">94</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-33:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">91</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		Show_Message := " 错误_33 ";</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">92</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-30:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">89</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		Show_Message := " 错误_30 ";</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">90</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-20:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">87</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		Show_Message := " 错误_20 ";</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">88</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-10:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">84</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		Show_Message := " 错误_10 ";</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">86</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	-5:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">15</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		Show_Message := " 错误_5 ";</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">48</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	0:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">25</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		Start_Restart_indicator := TRUE;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">78</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		Show_Message := " 步骤_0 ";</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">80</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	20:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">101</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		Show_Message := " 步骤_20 ";</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">102</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	50:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">82</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		Show_Message := " 步骤_50 ";</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">105</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	100:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">107</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		Show_Message := " 步骤_100 ";</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">108</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	110:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">106</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		Show_Message := " 步骤_110 ";</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">113</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	130:</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">111</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">		Show_Message := " 步骤_130 ";</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">109</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">83</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	//140:	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">110</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	//	Show_Message := " 完成 ";</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">16</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">13</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_CASE</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">9</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
            </Array>
          </Single>
        </Single>
        <Single Name="Interface" Type="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Method="IArchivable">
          <Single Name="TextDocument" Type="{f3878285-8e4f-490b-bb1b-9acbb7eb04db}" Method="IArchivable">
            <Array Name="TextLines" Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}">
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">2</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">FUNCTION_BLOCK Testment_Message_Manager</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">10</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">VAR_INPUT</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">3</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	state_in : INT;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">4</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_VAR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">47</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">VAR_OUTPUT</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">11</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Start_Restart_indicator : BOOL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">34</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Show_Message : WSTRING;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">5</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	Error_State : BOOL;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">6</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_VAR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">12</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">VAR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">7</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">	_case : int;</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">8</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string">END_VAR</Single>
              </Single>
              <Single Type="{a5de0b0b-1cb5-4913-ac21-9d70293ec00d}" Method="IArchivable">
                <Single Name="Id" Type="long">1</Single>
                <Null Name="Tag" />
                <Single Name="Text" Type="string"></Single>
              </Single>
            </Array>
          </Single>
        </Single>
        <Single Name="UniqueIdGenerator" Type="string">113</Single>
        <Single Name="POULevel" Type="{8e575c5b-1d37-49c6-941b-5c0ec7874787}">Standard</Single>
        <List Name="ChildObjectGuids" Type="System.Collections.ArrayList" />
        <Single Name="AddAttributeSubsequent" Type="bool">False</Single>
      </Single>
      <Single Name="ParentSVNodeGuid" Type="System.Guid">707a7570-1a86-4ce1-831f-3dd8049110a5</Single>
      <Array Name="Path" Type="string">
        <Single Type="string">CODESYS_Control_x86_Arca_Control_SM</Single>
        <Single Type="string">PLC Logic</Single>
        <Single Type="string">Application</Single>
        <Single Type="string">Testment_Servo_Function_Test</Single>
      </Array>
      <Single Name="Index" Type="int">-1</Single>
    </Single>
  </List2>
  <Single Name="ProfileName" Type="string">CODESYS V3.5 SP8 Patch 1</Single>
</Single>  </StructuredView>
</ExportFile>
